{
  "openapi": "3.0.3",
  "info": {
    "title": "Interoperability API Gateway Micro Service",
    "description": "exposes the API for interacting with interoperability features",
    "version": "0.1.0",
    "contact": {
      "name": "API Support",
      "url": "http://www.example.com/support",
      "email": "support@example.com"
    },
    "termsOfService": "http://swagger.io/terms/",
    "x-api-id": "an x-api-id",
    "x-summary": "an x-summary"
  },
  "servers": [
    {
      "url": "/api-gateway/0.1",
      "description": "This service is the interoperability API gateway"
    }
  ],
  "tags": [
    {
      "name": "gateway",
      "description": "Everything about your APIs",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "auth",
      "description": "Get security information",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "health",
      "description": "Verify service status",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/token.oauth2": {
      "post": {
        "security": [
          {}
        ],
        "tags": [
          "auth"
        ],
        "summary": "Create a new access token",
        "description": "Return ok",
        "operationId": "createToken",
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AccessTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "an Access token",
            "headers": {
              "Cache-Control": {
                "schema": {
                  "type": "string",
                  "default": "no-cache, no-store"
                },
                "description": "no-cache, no-store"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PdndClientCredentialsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "x-noqa": "RFC6749",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "x-noqa": "RFC6749",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessTokenRequest": {
        "type": "object",
        "required": [
          "client_assertion",
          "client_assertion_type",
          "grant_type"
        ],
        "properties": {
          "client_id": {
            "type": "string",
            "example": "e58035ce-c753-4f72-b613-46f8a17b71cc"
          },
          "client_assertion": {
            "type": "string",
            "format": "jws",
            "x-field-extra-annotation": "@lombok.ToString.Exclude"
          },
          "client_assertion_type": {
            "type": "string",
            "example": "urn%3Aietf%3Aparams%3Aoauth%3Aclient-assertion-type%3Ajwt-bearer"
          },
          "grant_type": {
            "type": "string",
            "enum": [
              "client_credentials"
            ]
          }
        }
      },
      "TokenType": {
        "type": "string",
        "description": "Represents the token type",
        "enum": [
          "Bearer"
        ]
      },
      "PdndClientCredentialsResponse": {
        "type": "object",
        "required": [
          "access_token",
          "token_type",
          "expires_in"
        ],
        "properties": {
          "access_token": {
            "type": "string",
            "format": "jws",
            "x-field-extra-annotation": "@lombok.ToString.Exclude"
          },
          "token_type": {
            "$ref": "#/components/schemas/TokenType"
          },
          "expires_in": {
            "type": "integer",
            "format": "int32",
            "maximum": 600
          }
        }
      },
      "EServiceDescriptorState": {
        "type": "string",
        "description": "EService State",
        "enum": [
          "DRAFT",
          "PUBLISHED",
          "DEPRECATED",
          "SUSPENDED",
          "ARCHIVED"
        ]
      },
      "PurposeState": {
        "type": "string",
        "description": "Purpose State",
        "enum": [
          "ACTIVE",
          "DRAFT",
          "SUSPENDED",
          "WAITING_FOR_APPROVAL",
          "ARCHIVED"
        ]
      },
      "AttributeKind": {
        "type": "string",
        "enum": [
          "CERTIFIED",
          "DECLARED",
          "VERIFIED"
        ]
      },
      "AttributeValidity": {
        "type": "string",
        "enum": [
          "VALID",
          "INVALID"
        ]
      },
      "AttributeValidityState": {
        "type": "object",
        "additionalProperties": false,
        "title": "AttributeValidityState",
        "description": "represents the validity of a specified attribute",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "validity": {
            "$ref": "#/components/schemas/AttributeValidity"
          }
        },
        "required": [
          "id",
          "validity"
        ]
      },
      "Problem": {
        "properties": {
          "type": {
            "description": "URI reference of type definition",
            "type": "string"
          },
          "status": {
            "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
            "example": 400,
            "exclusiveMaximum": true,
            "format": "int32",
            "maximum": 600,
            "minimum": 100,
            "type": "integer"
          },
          "title": {
            "description": "A short, summary of the problem type. Written in english and readable",
            "example": "Service Unavailable",
            "maxLength": 64,
            "pattern": "^[ -~]{0,64}$",
            "type": "string"
          },
          "detail": {
            "description": "A human readable explanation of the problem.",
            "example": "Request took too long to complete.",
            "maxLength": 4096,
            "pattern": "^.{0,1024}$",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "minItems": 0,
            "items": {
              "$ref": "#/components/schemas/ProblemError"
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "type",
          "status",
          "title",
          "errors"
        ]
      },
      "ProblemError": {
        "properties": {
          "code": {
            "description": "Internal code of the error",
            "example": "123-4567",
            "minLength": 8,
            "maxLength": 8,
            "pattern": "^[0-9]{3}-[0-9]{4}$",
            "type": "string"
          },
          "detail": {
            "description": "A human readable explanation specific to this occurrence of the problem.",
            "example": "Parameter not valid",
            "maxLength": 4096,
            "pattern": "^.{0,1024}$",
            "type": "string"
          }
        },
        "required": [
          "code",
          "detail"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}